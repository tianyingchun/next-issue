"use strict";var __decorate=this&&this.__decorate||function(e,t,r,a){var p,i=arguments.length,o=i<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,r):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,a);else for(var s=e.length-1;s>=0;s--)(p=e[s])&&(o=(i<3?p(o):i>3?p(t,r,o):p(t,r))||o);return i>3&&o&&Object.defineProperty(t,r,o),o},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},__param=this&&this.__param||function(e,t){return function(r,a){t(r,a,e)}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.SupplierStockAdminResolver=void 0;const graphql_1=require("@nestjs/graphql"),core_1=require("@vendure/core"),supplier_stock_entity_1=require("../../../entities/supplier-stock.entity"),supplier_1=require("../../../permission/supplier"),supplier_stock_service_1=require("../../services/supplier-stock.service");let SupplierStockAdminResolver=class SupplierStockAdminResolver{constructor(e,t){this.supplierStockService=e,this.orderService=t}supplierStock(e,t){return this.supplierStockService.findOne(e,t.id)}async queryOnSaleStockedSkus(e,t,r){return this.supplierStockService.findOnSaleStockedSkus(e,t.input,r)}async queryInsufficientOnSaleStock(e,t,r){return this.supplierStockService.findInsufficientOnSaleStock(e,t.input,r)}async supplierStocks(e,t,r){const a=await this.supplierStockService.findOrderVariantIds(e,t.extrasQuery);if(null!==a&&0===a.length&&!t.options?.filter?.productVariantId)return{totalItems:0,items:[]};const p=(a||[]).map((e=>String(e.id)));return t.options?.filter?.productVariantId&&p.push(String(t.options?.filter?.productVariantId.eq)),this.supplierStockService.findAll(e,{...t.options,filter:{...t.options?.filter,...null!==a?{productVariantId:{in:p}}:{}}},r)}allSupplierStockTags(e){return this.supplierStockService.findAllSupplierStockTags(e)}async createSupplierStock(e,t){return this.supplierStockService.create(e,t.input)}async updateSupplierStock(e,t){return this.supplierStockService.update(e,t.input)}async deleteSupplierStock(e,t){return this.supplierStockService.delete(e,t.id)}async adjustStock(e,t){return await this.supplierStockService.adjustStockManually(e,t.input),!0}async syncProductVariantsStock(e,t){return await this.supplierStockService.syncProductVariantsStock(e,t.productVariantIds),!0}};__decorate([(0,core_1.Allow)(supplier_1.supplierPermission.Read),(0,graphql_1.Query)(),__param(0,(0,core_1.Ctx)()),__param(1,(0,graphql_1.Args)()),__metadata("design:type",Function),__metadata("design:paramtypes",[core_1.RequestContext,Object]),__metadata("design:returntype",Promise)],SupplierStockAdminResolver.prototype,"supplierStock",null),__decorate([(0,core_1.Allow)(supplier_1.supplierPermission.Read),(0,graphql_1.Query)(),__param(0,(0,core_1.Ctx)()),__param(1,(0,graphql_1.Args)()),__param(2,(0,core_1.Relations)({entity:supplier_stock_entity_1.SupplierStock,omit:["productVariant"]})),__metadata("design:type",Function),__metadata("design:paramtypes",[core_1.RequestContext,Object,Array]),__metadata("design:returntype",Promise)],SupplierStockAdminResolver.prototype,"queryOnSaleStockedSkus",null),__decorate([(0,core_1.Allow)(supplier_1.supplierPermission.Read),(0,graphql_1.Query)(),__param(0,(0,core_1.Ctx)()),__param(1,(0,graphql_1.Args)()),__param(2,(0,core_1.Relations)({entity:supplier_stock_entity_1.SupplierStock,omit:["productVariant"]})),__metadata("design:type",Function),__metadata("design:paramtypes",[core_1.RequestContext,Object,Array]),__metadata("design:returntype",Promise)],SupplierStockAdminResolver.prototype,"queryInsufficientOnSaleStock",null),__decorate([(0,core_1.Allow)(supplier_1.supplierPermission.Read),(0,graphql_1.Query)(),__param(0,(0,core_1.Ctx)()),__param(1,(0,graphql_1.Args)()),__param(2,(0,core_1.Relations)({entity:supplier_stock_entity_1.SupplierStock,omit:["productVariant"]})),__metadata("design:type",Function),__metadata("design:paramtypes",[core_1.RequestContext,Object,Array]),__metadata("design:returntype",Promise)],SupplierStockAdminResolver.prototype,"supplierStocks",null),__decorate([(0,core_1.Allow)(supplier_1.supplierPermission.Read),(0,graphql_1.Query)(),__param(0,(0,core_1.Ctx)()),__metadata("design:type",Function),__metadata("design:paramtypes",[core_1.RequestContext]),__metadata("design:returntype",Promise)],SupplierStockAdminResolver.prototype,"allSupplierStockTags",null),__decorate([(0,core_1.Allow)(supplier_1.supplierPermission.Create),(0,graphql_1.Mutation)(),__param(0,(0,core_1.Ctx)()),__param(1,(0,graphql_1.Args)()),__metadata("design:type",Function),__metadata("design:paramtypes",[core_1.RequestContext,Object]),__metadata("design:returntype",Promise)],SupplierStockAdminResolver.prototype,"createSupplierStock",null),__decorate([(0,core_1.Allow)(supplier_1.supplierPermission.Update),(0,graphql_1.Mutation)(),__param(0,(0,core_1.Ctx)()),__param(1,(0,graphql_1.Args)()),__metadata("design:type",Function),__metadata("design:paramtypes",[core_1.RequestContext,Object]),__metadata("design:returntype",Promise)],SupplierStockAdminResolver.prototype,"updateSupplierStock",null),__decorate([(0,core_1.Allow)(supplier_1.supplierPermission.Delete),(0,graphql_1.Mutation)(),__param(0,(0,core_1.Ctx)()),__param(1,(0,graphql_1.Args)()),__metadata("design:type",Function),__metadata("design:paramtypes",[core_1.RequestContext,Object]),__metadata("design:returntype",Promise)],SupplierStockAdminResolver.prototype,"deleteSupplierStock",null),__decorate([(0,core_1.Allow)(supplier_1.supplierPermission.Update),(0,graphql_1.Mutation)(),__param(0,(0,core_1.Ctx)()),__param(1,(0,graphql_1.Args)()),__metadata("design:type",Function),__metadata("design:paramtypes",[core_1.RequestContext,Object]),__metadata("design:returntype",Promise)],SupplierStockAdminResolver.prototype,"adjustStock",null),__decorate([(0,core_1.Allow)(supplier_1.supplierPermission.Update),(0,graphql_1.Mutation)(),__param(0,(0,core_1.Ctx)()),__param(1,(0,graphql_1.Args)()),__metadata("design:type",Function),__metadata("design:paramtypes",[core_1.RequestContext,Object]),__metadata("design:returntype",Promise)],SupplierStockAdminResolver.prototype,"syncProductVariantsStock",null),SupplierStockAdminResolver=__decorate([(0,graphql_1.Resolver)(),__metadata("design:paramtypes",[supplier_stock_service_1.SupplierStockService,core_1.OrderService])],SupplierStockAdminResolver),exports.SupplierStockAdminResolver=SupplierStockAdminResolver;