"use strict";var __decorate=this&&this.__decorate||function(t,e,i,n){var s,r=arguments.length,a=r<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,i,n);else for(var c=t.length-1;c>=0;c--)(s=t[c])&&(a=(r<3?s(a):r>3?s(e,i,a):s(e,i))||a);return r>3&&a&&Object.defineProperty(e,i,a),a},__metadata=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.SupplierStockInTransitService=void 0;const common_1=require("@nestjs/common"),core_1=require("@vendure/core"),supplier_stock_in_transit_entity_1=require("../../entities/supplier-stock-in-transit.entity"),generated_admin_types_1=require("../../generated-admin-types"),supplier_stock_history_service_1=require("./supplier-stock-history.service"),supplier_stock_service_1=require("./supplier-stock.service");let SupplierStockInTransitService=class SupplierStockInTransitService{constructor(t,e,i,n){this.connection=t,this.listQueryBuilder=e,this.supplierStockService=i,this.supplierStockHistoryService=n}findAll(t,e){return this.listQueryBuilder.build(supplier_stock_in_transit_entity_1.SupplierStockInTransit,e,{ctx:t,relations:["supplierStock"]}).getManyAndCount().then((([t,e])=>({items:t,totalItems:e})))}findOne(t,e){return this.connection.getRepository(t,supplier_stock_in_transit_entity_1.SupplierStockInTransit).findOne(e,{relations:["supplierStock"]})}async syncInTransitStocks(t,e){const i=await this.calculateInTransitStocks(t,e.id);await this.supplierStockService.update(t,{id:e.id,inTransitsStock:i})}async finishInTransitStocks(t,e){if(0===e.inTransitIds.length)return 0;const{items:i}=await this.findAll(t,{skip:0,take:1e4,filter:{id:{in:e.inTransitIds.map((t=>String(t)))}}});for(const e of i)await this.connection.withTransaction(t,(async t=>{await this.transitionInTransitItemToStock(t,e)}));return i.length}async transitionInTransitItemToStock(t,e){const i=await this.supplierStockService.executeAdjustStockQuantity(t,e.supplierStock,e.quantity,generated_admin_types_1.SupplierStockAdjustType.STOCK_BOTH);await this.delete(t,[e.id]),await this.syncInTransitStocks(t,i),await this.supplierStockHistoryService.create(t,{supplierStockId:e.supplierStockId,stockAdjustType:generated_admin_types_1.SupplierStockAdjustType.STOCK_TRANSIT_TO_STOCK,data:{adjustQuantity:e.quantity,newStockOnHandQuantity:i.stockOnHand,newVirtualStockQuantity:i.virtualStock,reason:`在途库存转换为入库, 在途记录的ID:${e.id}`}})}async batchCreateStockInTransitRecords(t,e){for(const i of e)await this.connection.withTransaction(t,(async t=>{await this.createSingleStockInTransitRecord(t,i)}))}async createSingleStockInTransitRecord(t,e){const i=await this.supplierStockService.findOne(t,e.supplierStockId);if(!i)throw new core_1.EntityNotFoundError("SupplierStock",e.supplierStockId);const n=await this.create(t,{channelName:e.channelName,channelOrderNo:e.channelOrderNo,supplierStockId:i.id,quantity:e.quantity});await this.syncInTransitStocks(t,i),await this.supplierStockHistoryService.create(t,{supplierStockId:e.supplierStockId,stockAdjustType:generated_admin_types_1.SupplierStockAdjustType.STOCK_IN_TRANSIT,data:{adjustQuantity:e.quantity,newStockOnHandQuantity:i.stockOnHand,newVirtualStockQuantity:i.virtualStock,reason:`批量创建采购单, 被创建在途表记录Id: ${n?.id}`}})}async calculateInTransitStocks(t,e){return(await this.connection.getRepository(t,supplier_stock_in_transit_entity_1.SupplierStockInTransit).createQueryBuilder("stockInTransit").select("SUM(stockInTransit.quantity)","inTransitStocks").where("stockInTransit.supplierStockId = :supplierStockId",{supplierStockId:e}).getRawOne()).inTransitStocks||0}async create(t,e){const i=await this.connection.getRepository(t,supplier_stock_in_transit_entity_1.SupplierStockInTransit).save(new supplier_stock_in_transit_entity_1.SupplierStockInTransit(e)),n=await(0,core_1.assertFound)(this.findOne(t,i.id));return await this.syncInTransitStocks(t,n.supplierStock),await this.supplierStockHistoryService.create(t,{supplierStockId:e.supplierStockId,stockAdjustType:generated_admin_types_1.SupplierStockAdjustType.STOCK_IN_TRANSIT,data:{adjustQuantity:e.quantity,newStockOnHandQuantity:n.supplierStock.stockOnHand,newVirtualStockQuantity:n.supplierStock.virtualStock,reason:`人工创建在途单, 被创建在途表记录Id: ${n?.id}`}}),n}async update(t,e){const i=await this.connection.getEntityOrThrow(t,supplier_stock_in_transit_entity_1.SupplierStockInTransit,e.id);(0,core_1.patchEntity)(i,e),await this.connection.getRepository(t,supplier_stock_in_transit_entity_1.SupplierStockInTransit).save(i);const n=await(0,core_1.assertFound)(this.findOne(t,i.id));return await this.syncInTransitStocks(t,n.supplierStock),await this.supplierStockHistoryService.create(t,{supplierStockId:n.supplierStockId,stockAdjustType:generated_admin_types_1.SupplierStockAdjustType.STOCK_IN_TRANSIT,data:{adjustQuantity:e.quantity,newStockOnHandQuantity:n.supplierStock.stockOnHand,newVirtualStockQuantity:n.supplierStock.virtualStock,reason:`人工更新在途单, 被更新在途表记录Id: ${n?.id}`}}),n}async delete(t,e){const i=await this.connection.getRepository(t,supplier_stock_in_transit_entity_1.SupplierStockInTransit).findByIds(e);await this.connection.getRepository(t,supplier_stock_in_transit_entity_1.SupplierStockInTransit).delete(i.map((t=>String(t.id))));for(const e of i)await this.syncInTransitStocks(t,e.supplierStock),await this.supplierStockHistoryService.create(t,{supplierStockId:e.supplierStockId,stockAdjustType:generated_admin_types_1.SupplierStockAdjustType.STOCK_IN_TRANSIT,data:{adjustQuantity:e.quantity,newStockOnHandQuantity:e.supplierStock.stockOnHand,newVirtualStockQuantity:e.supplierStock.virtualStock,reason:`人工删除在途单, 被删除在途表记录Id: ${e?.id}`}});return{result:generated_admin_types_1.DeletionResult.DELETED}}};SupplierStockInTransitService=__decorate([(0,common_1.Injectable)(),__metadata("design:paramtypes",[core_1.TransactionalConnection,core_1.ListQueryBuilder,supplier_stock_service_1.SupplierStockService,supplier_stock_history_service_1.SupplierStockHistoryService])],SupplierStockInTransitService),exports.SupplierStockInTransitService=SupplierStockInTransitService;